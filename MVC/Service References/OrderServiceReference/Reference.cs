//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC.OrderServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestFailed", Namespace="http://schemas.datacontract.org/2004/07/WCF")]
    [System.SerializableAttribute()]
    public partial class RequestFailed : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OrderServiceReference.IOrderInformationService")]
    public interface IOrderInformationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderInformationService/GetOrderList", ReplyAction="http://tempuri.org/IOrderInformationService/GetOrderListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MVC.OrderServiceReference.RequestFailed), Action="http://tempuri.org/IOrderInformationService/GetOrderListRequestFailedFault", Name="RequestFailed", Namespace="http://schemas.datacontract.org/2004/07/WCF")]
        DigitalXData.OrderedItem[] GetOrderList(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderInformationService/GetOrderList", ReplyAction="http://tempuri.org/IOrderInformationService/GetOrderListResponse")]
        System.Threading.Tasks.Task<DigitalXData.OrderedItem[]> GetOrderListAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderInformationService/GetShoppingCartInformation", ReplyAction="http://tempuri.org/IOrderInformationService/GetShoppingCartInformationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MVC.OrderServiceReference.RequestFailed), Action="http://tempuri.org/IOrderInformationService/GetShoppingCartInformationRequestFail" +
            "edFault", Name="RequestFailed", Namespace="http://schemas.datacontract.org/2004/07/WCF")]
        DigitalXData.ShoppingCartInformation[] GetShoppingCartInformation(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderInformationService/GetShoppingCartInformation", ReplyAction="http://tempuri.org/IOrderInformationService/GetShoppingCartInformationResponse")]
        System.Threading.Tasks.Task<DigitalXData.ShoppingCartInformation[]> GetShoppingCartInformationAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderInformationServiceChannel : MVC.OrderServiceReference.IOrderInformationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderInformationServiceClient : System.ServiceModel.ClientBase<MVC.OrderServiceReference.IOrderInformationService>, MVC.OrderServiceReference.IOrderInformationService {
        
        public OrderInformationServiceClient() {
        }
        
        public OrderInformationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrderInformationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderInformationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderInformationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DigitalXData.OrderedItem[] GetOrderList(int id) {
            return base.Channel.GetOrderList(id);
        }
        
        public System.Threading.Tasks.Task<DigitalXData.OrderedItem[]> GetOrderListAsync(int id) {
            return base.Channel.GetOrderListAsync(id);
        }
        
        public DigitalXData.ShoppingCartInformation[] GetShoppingCartInformation(int id) {
            return base.Channel.GetShoppingCartInformation(id);
        }
        
        public System.Threading.Tasks.Task<DigitalXData.ShoppingCartInformation[]> GetShoppingCartInformationAsync(int id) {
            return base.Channel.GetShoppingCartInformationAsync(id);
        }
    }
}
